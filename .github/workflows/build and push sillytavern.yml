name: Build and Push SillyTavern
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1,15 * *'  # 每月1号和15号运行

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check latest versions
        id: check-versions
        run: |
          # 获取GitHub最新版本
          GITHUB_API="https://api.github.com/repos/SillyTavern/SillyTavern/releases/latest"
          LATEST_VERSION=$(curl -s $GITHUB_API | jq -r '.tag_name')
          DOWNLOAD_URL=$(curl -s $GITHUB_API | jq -r '.tarball_url')
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV
          echo "DOWNLOAD_URL=$DOWNLOAD_URL" >> $GITHUB_ENV
          
          # 获取DockerHub最新版本
          DOCKER_API="https://registry.hub.docker.com/v2/repositories/${{ secrets.DOCKERHUB_USERNAME }}/sillytavern/tags/"
          DOCKER_VERSION=$(curl -s "$DOCKER_API" | jq -r '.results | map(select(.name != "latest")) | max_by(.last_updated) | .name // "none"')
          echo "DOCKER_VERSION=$DOCKER_VERSION" >> $GITHUB_ENV
          
          # 检查是否需要更新
          if [ "$LATEST_VERSION" != "$DOCKER_VERSION" ]; then
            echo "需要更新：GitHub版本 $LATEST_VERSION 与 Docker版本 $DOCKER_VERSION 不同"
            echo "UPDATE_NEEDED=true" >> $GITHUB_ENV
          else
            echo "无需更新：GitHub版本 $LATEST_VERSION 与 Docker版本 $DOCKER_VERSION 相同"
            echo "UPDATE_NEEDED=false" >> $GITHUB_ENV
          fi
      
      - name: Download and extract source
        if: env.UPDATE_NEEDED == 'true'
        run: |
          echo "下载最新版本 ${{ env.LATEST_VERSION }} 中..."
          curl -L -o latest.tar.gz "${{ env.DOWNLOAD_URL }}"
          mkdir -p st
          tar -xzf latest.tar.gz --strip-components=1 -C st
      
      - name: Set up QEMU
        if: env.UPDATE_NEEDED == 'true'
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        if: env.UPDATE_NEEDED == 'true'
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        if: env.UPDATE_NEEDED == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push multi-architecture Docker images
        if: env.UPDATE_NEEDED == 'true'
        uses: docker/build-push-action@v6
        with:
          context: st
          file: st/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sillytavern:${{ env.LATEST_VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/sillytavern:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/sillytavern:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/sillytavern:buildcache,mode=max
          
      - name: Update build status
        if: always()
        run: |
          if [ "${{ env.UPDATE_NEEDED }}" == "true" ]; then
            if [ "${{ job.status }}" == "success" ]; then
              echo "✅ 成功构建并推送多架构版本 ${{ env.LATEST_VERSION }}"
              echo "支持的架构: AMD64, ARM64, ARMv7"
            else
              echo "❌ 版本 ${{ env.LATEST_VERSION }} 构建失败"
            fi
          else
            echo "ℹ️ 无需更新，当前Docker版本 ${{ env.DOCKER_VERSION }} 已是最新"
          fi